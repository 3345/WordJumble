Word Jumble Game

1. Run main() in WordJumble.java to play, follow the prompt in console.
2. Input can have at most 16 unique characters, and can have at most 30 total characters.
   16 unique chars can be solved in 40 seconds 2182 words found, on a 2012 mac.
3. Do not change location of dict.txt, if you must, change FILE_PATH in WordJumble.java

Impl Note:

1. Pre-process dictionary file to construct two tries, one in normal order and one in sorted order.
2. Compute all UNIQUE combinations of characters contained in the input word.
3. Each combination is already sorted, as it is necessary to ensure uniqueness.
   For each combination, check against sorted trie. If not found, filter it out before computing UNIQUE permutation,
   this will save a lot of work!
4. For each remaining combination, compute its permutation, check against trie.

Performance Note:

1. Unique chars will incur a worst case of O(N!^M!), the limit of 16 unique chars is reasonable.
2. Impl(3) is crucial, without it, 14 unique characters cannot be solved in reasonable time while with it,
   it can be solved in 13 seconds.

3. The dictionary used in this program contains 113809 words which is much larger then a realistic dictionary.
   It counts garbage like "aahs" as words, if use a normal dictionary of around 20000 words, the speed should be
   much faster thanks to Impl(3).


